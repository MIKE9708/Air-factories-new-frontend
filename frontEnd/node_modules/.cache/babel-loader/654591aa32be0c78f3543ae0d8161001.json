{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/PrinterDetails/PrinterDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { MakerNav } from \"../../../component/Navbar/homeNav\";\nimport { useEffect, useState } from 'react';\nimport './PrinterDetails.css';\nimport OnBoarding from \"../../../SmartContracts/OnBoarding/OnBoarding\";\nimport InfoComponent from \"../../../component/PrinterInfoComponent/Info/InfoComponent\";\nimport UpdateComponent from \"../../../component/PrinterInfoComponent/Update/UpdateComponent\";\nimport RemoveComponent from \"../../../component/PrinterInfoComponent/Remove/RemoveComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrinterDetails() {\n  _s();\n\n  let param = useParams();\n  console.log(param);\n  let result = '';\n  let reg = /&&([0-9])/g;\n  const index = reg.exec(param.printerDetails);\n  const [myPrinter, setMyPrinter] = useState();\n  const title = ['Printer Info', 'Update Material', 'Remove Material'];\n  const [currentTitle, setCurrentTitle] = useState(title[0]);\n  const target = {\n    info: false,\n    update: false,\n    remove: false\n  };\n  const [section, setSection] = useState({\n    info: true,\n    update: false,\n    remove: false\n  }); //let printer=getPrinter(param.printerDetails);\n\n  function setNewSection(currentSection) {\n    let result = '';\n\n    switch (currentSection) {\n      case 'info':\n        result = Object.assign(target, {\n          info: true\n        });\n        setSection(result);\n        setCurrentTitle(title[0]);\n        break;\n\n      case 'Update':\n        result = Object.assign(target, {\n          update: true\n        });\n        setSection(result);\n        setCurrentTitle(title[1]);\n        break;\n\n      case 'Remove':\n        result = Object.assign(target, {\n          remove: true\n        });\n        setSection(result);\n        setCurrentTitle(title[2]);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    const getPrinterInfo = async () => {\n      const onboard = new OnBoarding();\n      const result = await onboard.getPrinter(index);\n    }; //getPrinterInfo();\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MakerNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navBarPrinter\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sectionStyle\",\n          onClick: () => {\n            if (section.info !== true) setNewSection('info');\n          },\n          children: \"Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sectionStyle\",\n          onClick: () => {\n            if (section.update !== true) setNewSection('Update');\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sectionStyle\",\n          onClick: () => {\n            if (section.remove !== true) setNewSection('Remove');\n          },\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), section.info && /*#__PURE__*/_jsxDEV(InfoComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 30\n      }, this), section.update && /*#__PURE__*/_jsxDEV(UpdateComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 32\n      }, this), section.remove && /*#__PURE__*/_jsxDEV(RemoveComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n/*\n <h1 className=\"printerName\">{printer.name}</h1>\n        <div className=\"myPrinter\">\n        <div className=\"printerVideo\">\n        </div>\n\n\n\n\n\n            <div className=\"info\">\n            <iframe className=\"video\"src={\"http://\"+address+\"/webcam/?action=stream\"}\n            width=\"450px\"\n            height=\"450px\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            title=\"Printer stream\"></iframe>\n            <div class=\"dataInfo\">\n                <h3>Address:</h3><p>{printer.address}</p>\n                <h3>Nozzles mounted:</h3><p>{printer.nozzlesMounted}</p>\n                <h3>Soluble:</h3><p>{printer.soluble}</p>\n                <h3>Food safety:</h3><p>{printer.foodSafety}</p>\n*/\n\n_s(PrinterDetails, \"zRoVi5UbxLQO/VN54lNmOw35CCk=\", false, function () {\n  return [useParams];\n});\n\n_c = PrinterDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrinterDetails\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/PrinterDetails/PrinterDetails.js"],"names":["useParams","MakerNav","useEffect","useState","OnBoarding","InfoComponent","UpdateComponent","RemoveComponent","PrinterDetails","param","console","log","result","reg","index","exec","printerDetails","myPrinter","setMyPrinter","title","currentTitle","setCurrentTitle","target","info","update","remove","section","setSection","setNewSection","currentSection","Object","assign","getPrinterInfo","onboard","getPrinter"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { MakerNav } from \"../../../component/Navbar/homeNav\";\nimport {useEffect,useState} from 'react';\nimport './PrinterDetails.css';\nimport OnBoarding from \"../../../SmartContracts/OnBoarding/OnBoarding\";\nimport InfoComponent from \"../../../component/PrinterInfoComponent/Info/InfoComponent\";\nimport UpdateComponent from \"../../../component/PrinterInfoComponent/Update/UpdateComponent\";\nimport RemoveComponent from \"../../../component/PrinterInfoComponent/Remove/RemoveComponent\";\n\nexport default function PrinterDetails(){\n\n    let param = useParams();\n    console.log(param)\n    let result='';\n    let reg=/&&([0-9])/g;\n    const index=reg.exec(param.printerDetails)\n    const [myPrinter,setMyPrinter]=useState();\n    const title=['Printer Info','Update Material','Remove Material'];\n    const [currentTitle,setCurrentTitle]=useState(title[0]);\n    const target={        \n        info:false,\n        update:false,\n        remove:false\n    }\n    const [section,setSection]=useState({        \n        info:true,\n        update:false,\n        remove:false\n    });\n    \n    //let printer=getPrinter(param.printerDetails);\n\n    function setNewSection(currentSection){\n        let result='';\n        switch(currentSection){\n            case 'info': result=Object.assign(target,{info:true});\n                setSection(result);\n                setCurrentTitle(title[0]); \n                break;\n            case 'Update': result=Object.assign(target,{update:true});\n                setSection(result);\n                setCurrentTitle(title[1]);\n                break;\n            case 'Remove': result=Object.assign(target,{remove:true});\n                setSection(result);\n                setCurrentTitle(title[2]);\n                break;\n            default: break;\n        }\n\n\n    }\n\n\n    useEffect(()=>{\n\n        \n        const  getPrinterInfo=async()=>{\n            const onboard=new OnBoarding();\n            const result=await onboard.getPrinter(index);\n\n        };\n        //getPrinterInfo();\n    })\n    return (\n        <div>\n        <MakerNav/>\n        <div className=\"title\">\n            <h2>{currentTitle}</h2>\n        </div>\n        <div className =\"container\">\n            <div className=\"navBarPrinter\">\n                    <p className=\"sectionStyle\" onClick={()=>{\n                        if(section.info!==true)\n                            setNewSection('info');\n                    }}>Info</p>\n                    <p className=\"sectionStyle\" onClick={()=>{\n                        if(section.update!==true)\n                            setNewSection('Update');\n                    }}>Update</p>\n                    <p className=\"sectionStyle\" onClick={()=>{\n                        if(section.remove!==true)\n                            setNewSection('Remove');\n                    }}>Remove</p>\n            </div>\n            {section.info && <InfoComponent/>}\n            {section.update && <UpdateComponent/>}\n            {section.remove && <RemoveComponent/>}\n\n        </div>\n          \n        </div>\n    )   \n}\n\n\n/*\n <h1 className=\"printerName\">{printer.name}</h1>\n        <div className=\"myPrinter\">\n        <div className=\"printerVideo\">\n        </div>\n\n\n\n\n\n            <div className=\"info\">\n            <iframe className=\"video\"src={\"http://\"+address+\"/webcam/?action=stream\"}\n            width=\"450px\"\n            height=\"450px\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            title=\"Printer stream\"></iframe>\n            <div class=\"dataInfo\">\n                <h3>Address:</h3><p>{printer.address}</p>\n                <h3>Nozzles mounted:</h3><p>{printer.nozzlesMounted}</p>\n                <h3>Soluble:</h3><p>{printer.soluble}</p>\n                <h3>Food safety:</h3><p>{printer.foodSafety}</p>\n*/"]},"metadata":{},"sourceType":"module"}