{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Tables/Tables.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMaterials, getColor } from \"../../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tables(props) {\n  _s();\n\n  const [printerList, setPr] = useState('');\n  const [materialsList, setMaterialsList] = useState('');\n  const navigate = useNavigate();\n  let result = '';\n\n  const removePrinter = async index => {\n    const onboard = new OnBoarding();\n    let res = await onboard.removePrinter(index);\n    if (res !== 'Error') window.location.reload();\n  };\n\n  const removeMaterial = async (name, type, index) => {\n    const onboard = new OnBoarding();\n    let res = await onboard.removeMaterial(name, type, index);\n    if (res !== 'Error') window.location.reload();\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const boarding = new OnBoarding();\n      const web3 = new Web3();\n\n      if (props.table === 'printer') {\n        let res = await boarding.getPrinters();\n        console.log(res);\n        console.log(\"qui\");\n        result = res.map((value, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"printers\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"color\",\n              onClick: () => navigate('/myprinters/' + web3.utils.toUtf8(value.name) + '&&' + key),\n              children: [\" \", web3.utils.toUtf8(value.name), \" \"]\n            }, value.name + \"name\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: [value.volume, \"m\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 101\n              }, this)]\n            }, value.volume + \"volume\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: [\"  \", value.maxPrintTemperature, \"\\u2103 \"]\n            }, value.maxPrintTemperature, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove\",\n                onClick: () => removePrinter(key),\n                children: \"Rimuovi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 75\n              }, this)\n            }, key + \"button\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 32\n          }, this);\n        });\n        setPr(result);\n      } else if (props.table === 'material') {\n        let res = await boarding.getMaterials();\n        if (res === 'Error') return;\n        console.log(res);\n        const color = getColor();\n        result = res.map((value, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"printers\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"color\",\n              onClick: () => navigate('/'),\n              children: [\" \", web3.utils.toUtf8(value.name), \" \"]\n            }, value.name + \"name\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: color[value.color]\n            }, value.color + \"color\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: [\"  \", material[value.mType], \" \"]\n            }, value.mType, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove\",\n                onClick: () => removeMaterial(value.name, value.mType, key),\n                children: \"Rimuovi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 67\n              }, this)\n            }, key + \"button\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }, this);\n        });\n        setMaterialsList(result);\n      }\n    }\n\n    ;\n    getData();\n  }, [result]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"printerTable\",\n    children: [props.table === 'printer' ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My printers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My materials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 61\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"myPrinters\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [props.table === 'printer' ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Max printer temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 28\n        }, this), props.table === 'printer' ? printerList : materialsList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonArea\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"AddprinterButton\",\n        onClick: () => navigate('/add' + props.table),\n        children: \"Aggiungi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Tables, \"6ydZI/Avso+Z8PmVRu3sFL+A6cU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tables;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Tables/Tables.js"],"names":["useEffect","useState","Web3","OnBoarding","useNavigate","getMaterials","getColor","Tables","props","printerList","setPr","materialsList","setMaterialsList","navigate","result","removePrinter","index","onboard","res","window","location","reload","removeMaterial","name","type","getData","boarding","web3","table","getPrinters","console","log","map","value","key","utils","toUtf8","width","volume","maxPrintTemperature","color","material","mType"],"mappings":"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","sourcesContent":["import { useEffect,useState } from \"react\";\nimport Web3 from \"web3\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMaterials,getColor } from \"../../data/data\";\nexport default function Tables(props){\n\n    const [printerList,setPr]=useState('');\n    const [materialsList,setMaterialsList]=useState('');\n    const navigate=useNavigate();\n    let result='';\n\n    const removePrinter=(async(index)=>{\n        const onboard=new OnBoarding();\n        let res=await onboard.removePrinter(index);\n        if(res!=='Error')\n            window.location.reload();\n    })\n\n    const removeMaterial=(async(name,type,index)=>{\n        const onboard=new OnBoarding();\n        let res=await onboard.removeMaterial(name,type,index);\n        if(res!=='Error')\n            window.location.reload();\n    })\n\n\n    useEffect(()=>{\n        \n        async function getData(){\n            const boarding=new OnBoarding();\n            const web3=new Web3();\n            if(props.table==='printer'){\n\n                let res =await boarding.getPrinters();\n                console.log(res)\n                console.log(\"qui\")\n                result=res.map((value,key)=>{\n                        return <tr key={key} className=\"printers\" >\n                            <td key={value.name+\"name\"} className=\"color\" onClick={()=>navigate('/myprinters/'+web3.utils.toUtf8(value.name)+'&&'+key)}> {web3.utils.toUtf8(value.name)} </td>\n                            <td key={value.volume+\"volume\"}  style={{width:\"10px\"}} >{value.volume}m<sup>3</sup></td>\n                            <td key={value.maxPrintTemperature}  style={{width:\"10px\"}} >  {value.maxPrintTemperature}&#8451; </td>\n                            <td key={key+\"button\"} style={{width:\"10px\"}}><button className=\"remove\" onClick={()=>removePrinter(key)}>Rimuovi</button></td>\n                        </tr>  \n                })\n                setPr(result);\n        }\n        else if(props.table==='material'){\n            let res=await boarding.getMaterials();\n            if(res==='Error')\n                return\n            console.log(res);\n            const color=getColor()\n            result=res.map((value,key)=>{\n                return <tr key={key} className=\"printers\" >\n                    <td key={value.name+\"name\"} className=\"color\" onClick={()=>navigate('/')}> {web3.utils.toUtf8(value.name)} </td>\n                    <td key={value.color+\"color\"}  style={{width:\"10px\"}} >{color[value.color]}</td>\n                    <td key={value.mType}  style={{width:\"10px\"}} >  {material[value.mType]} </td>\n                    <td key={key+\"button\"} style={{width:\"10px\"}}><button className=\"remove\" onClick={()=>removeMaterial(value.name,value.mType,key)}>Rimuovi</button></td>\n                </tr>  \n        })\n            setMaterialsList(result);\n        }};\n        getData();},[result])\n\n        return(\n           <div className=\"printerTable\">\n           {props.table==='printer'?(<h1>My printers</h1>):(<h1>My materials</h1>)}\n           \n           <table className=\"myPrinters\">\n               <tbody>\n                   {props.table==='printer'?(<tr>\n                       <th>Name</th>\n                       <th>Volume</th>\n                       <th>Max printer temperature</th>\n                       <th>Remove</th>\n                   </tr>):(<tr>\n                            <th>Name</th>\n                            <th>Color</th>\n                            <th>Quantity</th>\n                            <th>Remove</th>\n                        </tr>)}\n\n                   {props.table==='printer'?(printerList):(materialsList)} \n               </tbody>\n\n           </table>\n           <div className=\"buttonArea\">\n                   <button className=\"AddprinterButton\" onClick={()=>navigate('/add'+props.table)}>Aggiungi</button>\n               </div>\n\n           </div>\n           \n       \n        )\n}"]},"metadata":{},"sourceType":"module"}