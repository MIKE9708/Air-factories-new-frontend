{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js\",\n    _s = $RefreshSig$();\n\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport { getPrinters } from \"../../data/data\";\nimport './Myprinters.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPrinters() {\n  _s();\n\n  const onBoarding = new OnBoarding();\n  const printers = getPrinters();\n  const navigate = useNavigate();\n  const [printerList, setPrinterList] = useState([]);\n\n  async function getPrinters() {\n    let res = await onBoarding.getPrinters();\n    console.log(\"prova\");\n\n    if (rs.length == 1) {\n      setPrinterListList(() => [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: res[0].name\n        }, res[0].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: res[0].volume\n        }, \"volume\" + 0 + res[0].volume, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: res[0].maxPrintTemperature\n        }, \"Temp\" + 0 + res[0].maxPrintTemperature, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]);\n    }\n    /*res.map((value,key)=>{\n        \n        setPrinterList((prev)=>[...prev,\n            <tr key={key}>\n                <td key={value.name}>{value.name}</td>\n                <td key={\"volume\"+key+value.volume}>{value.volume}</td>\n                <td key={\"Temp\"+key+value.maxPrintTemperature}>{value.maxPrintTemperature}</td>\n            </tr>\n            ]\n            )\n    })*/\n\n  }\n\n  useEffect(() => {//getPrinters();\n  }, []);\n  getPrinters();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printerTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My printers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"myPrinters\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Max printer temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n/*\n\n                <table className=\"myPrinters\">\n                    <tbody>\n                    <tr>\n                        <th>Address</th>\n                        <th>Name</th>\n                        <th>Seleziona</th>\n                    </tr> \n                    {printers.printers.map((val,key)=>\n                    <tr key={key}>\n                        <td key={val.address}>{val.address}</td>\n                        <td key={val.name}>{val.name}</td>\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} onClick={async ()=>navigate('/myprinters/'+val.address)}className=\"printerButton\">Seleziona</button></td>\n                    </tr>)}\n                   </tbody> \n                </table>\n\n\n\n\n*/\n\n_s(MyPrinters, \"IL20liJljoSkBqeQ3kBjLgtSc1E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyPrinters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPrinters\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js"],"names":["UserNav","getPrinters","useNavigate","useEffect","useState","OnBoarding","MyPrinters","onBoarding","printers","navigate","printerList","setPrinterList","res","console","log","rs","length","setPrinterListList","name","volume","maxPrintTemperature"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,4CAAvB;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC,QAAMC,UAAU,GAAC,IAAIF,UAAJ,EAAjB;AACA,QAAMG,QAAQ,GAACP,WAAW,EAA1B;AACA,QAAMQ,QAAQ,GAACP,WAAW,EAA1B;AACA,QAAM,CAACQ,WAAD,EAAaC,cAAb,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;;AAGA,iBAAeH,WAAf,GAA4B;AACxB,QAAIW,GAAG,GAAE,MAAML,UAAU,CAACN,WAAX,EAAf;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAGC,EAAE,CAACC,MAAH,IAAW,CAAd,EAAgB;AACZC,MAAAA,kBAAkB,CAAC,MAAI,cACnB;AAAA,gCACI;AAAA,oBAAuBL,GAAG,CAAC,CAAD,CAAH,CAAOM;AAA9B,WAASN,GAAG,CAAC,CAAD,CAAH,CAAOM,IAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAoCN,GAAG,CAAC,CAAD,CAAH,CAAOO;AAA3C,WAAS,WAAS,CAAT,GAAWP,GAAG,CAAC,CAAD,CAAH,CAAOO,MAA3B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAA+CP,GAAG,CAAC,CAAD,CAAH,CAAOQ;AAAtD,WAAS,SAAO,CAAP,GAASR,GAAG,CAAC,CAAD,CAAH,CAAOQ,mBAAzB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAS,CAAT;AAAA;AAAA;AAAA;AAAA,cADmB,CAAL,CAAlB;AAOH;AAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEK;;AAIDjB,EAAAA,SAAS,CAAC,MAAI,CACV;AACC,GAFI,EAEH,EAFG,CAAT;AAGIF,EAAAA,WAAW;AACf,sBACI;AAAA,4BACK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADL,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,+BACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;AASD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7FwBK,U;UAILJ,W;;;KAJKI,U","sourcesContent":["import { UserNav } from \"../../component/Navbar/homeNav\"\nimport { getPrinters } from \"../../data/data\"\nimport './Myprinters.css'\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect,useState} from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\n\nexport default function MyPrinters(){\n\n    const onBoarding=new OnBoarding();\n    const printers=getPrinters();\n    const navigate=useNavigate();\n    const [printerList,setPrinterList]=useState([]);\n\n\n    async function getPrinters(){\n        let res =await onBoarding.getPrinters();\n        console.log(\"prova\")\n        if(rs.length==1){\n            setPrinterListList(()=>[\n                <tr key={0}>\n                    <td key={res[0].name}>{res[0].name}</td>\n                    <td key={\"volume\"+0+res[0].volume}>{res[0].volume}</td>\n                    <td key={\"Temp\"+0+res[0].maxPrintTemperature}>{res[0].maxPrintTemperature}</td>\n                </tr>\n            ])\n        }\n\n        /*res.map((value,key)=>{\n            \n            setPrinterList((prev)=>[...prev,\n                <tr key={key}>\n                    <td key={value.name}>{value.name}</td>\n                    <td key={\"volume\"+key+value.volume}>{value.volume}</td>\n                    <td key={\"Temp\"+key+value.maxPrintTemperature}>{value.maxPrintTemperature}</td>\n                </tr>\n                ]\n                )\n        })*/\n\n    }\n\n\n\n    useEffect(()=>{\n        //getPrinters();\n        },[])\n        getPrinters();\n    return(\n        <div>\n             <UserNav/>\n            <div className=\"printerTable\">\n            <h1>My printers</h1>\n            \n            \n            <table className=\"myPrinters\">\n                <tbody>\n                    <tr>\n                        <th>Name</th>\n                        <th>Volume</th>\n                        <th>Max printer temperature</th>\n                    </tr> \n                </tbody> \n            </table>\n\n\n            </div>\n            \n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n/*\n\n                <table className=\"myPrinters\">\n                    <tbody>\n                    <tr>\n                        <th>Address</th>\n                        <th>Name</th>\n                        <th>Seleziona</th>\n                    </tr> \n                    {printers.printers.map((val,key)=>\n                    <tr key={key}>\n                        <td key={val.address}>{val.address}</td>\n                        <td key={val.name}>{val.name}</td>\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} onClick={async ()=>navigate('/myprinters/'+val.address)}className=\"printerButton\">Seleziona</button></td>\n                    </tr>)}\n                   </tbody> \n                </table>\n\n\n\n\n*/"]},"metadata":{},"sourceType":"module"}