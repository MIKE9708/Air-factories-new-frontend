{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js\",\n    _s = $RefreshSig$();\n\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport { getPrinters } from \"../../data/data\";\nimport './Myprinters.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPrinters() {\n  _s();\n\n  const onBoarding = new OnBoarding();\n  const printers = getPrinters();\n  const navigate = useNavigate();\n  const [printerList, setPr] = useState([]);\n\n  async function getPrinters() {\n    let res = await onBoarding.getPrinters();\n    let valu = res;\n\n    if (res.length === 1) {\n      if (printerList.length === 1) return;else {\n        setPr( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.name\n          }, value.name + \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.volume\n          }, value.volume + \"volume\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.maxPrintTemperature\n          }, value.maxPrintTemperature, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 23\n        }, this));\n      }\n    }\n\n    valu.map((value, key) => {\n      if (key === 0 && printerList.length === 1) return;\n      setPr(prev => [...prev, /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.name\n        }, value.name + \"name\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.volume\n        }, value.volume + \"volume\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.maxPrintTemperature\n        }, value.maxPrintTemperature, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 39\n      }, this)]);\n    });\n  }\n\n  useEffect(() => {\n    getPrinters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printerTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My printers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"myPrinters\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Max printer temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), printerList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n/*\n\n                <table className=\"myPrinters\">\n                    <tbody>\n                    <tr>\n                        <th>Address</th>\n                        <th>Name</th>\n                        <th>Seleziona</th>\n                    </tr> \n                    {printers.printers.map((val,key)=>\n                    <tr key={key}>\n                        <td key={val.address}>{val.address}</td>\n                        <td key={val.name}>{val.name}</td>\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} onClick={async ()=>navigate('/myprinters/'+val.address)}className=\"printerButton\">Seleziona</button></td>\n                    </tr>)}\n                   </tbody> \n                </table>\n\n\n\n\n*/\n\n_s(MyPrinters, \"KSVIYdk9yayKNXPZZeyvq0q94fM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyPrinters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPrinters\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js"],"names":["UserNav","getPrinters","useNavigate","useEffect","useState","OnBoarding","MyPrinters","onBoarding","printers","navigate","printerList","setPr","res","valu","length","value","name","volume","maxPrintTemperature","key","map","prev"],"mappings":"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","sourcesContent":["import { UserNav } from \"../../component/Navbar/homeNav\"\nimport { getPrinters } from \"../../data/data\"\nimport './Myprinters.css'\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect,useState} from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\n\nexport default function MyPrinters(){\n\n    const onBoarding=new OnBoarding();\n    const printers=getPrinters();\n    const navigate=useNavigate();\n    const [printerList,setPr]=useState([]);\n\n    async function getPrinters(){\n        let res =await onBoarding.getPrinters();\n        let valu=res;\n\n        if(res.length===1){\n            if(printerList.length===1)\n                return\n            else{\n                setPr(<tr key={key}>\n                    <td key={value.name+\"name\"}>{value.name}</td>\n                    <td key={value.volume+\"volume\"}>{value.volume}</td>\n                    <td key={value.maxPrintTemperature}>{value.maxPrintTemperature}</td>\n                </tr>)\n            }\n        }\n\n\n        valu.map((value,key)=>{\n                if(key===0 && printerList.length===1)\n                    return;\n               setPr((prev)=>[...prev,<tr key={key}>\n                    <td key={value.name+\"name\"}>{value.name}</td>\n                    <td key={value.volume+\"volume\"}>{value.volume}</td>\n                    <td key={value.maxPrintTemperature}>{value.maxPrintTemperature}</td>\n                </tr>])\n                \n                \n        })\n\n    }\n\n\n\n    useEffect(()=>{\n        getPrinters();\n        },[])\n       \n    return(\n        <div>\n             <UserNav/>\n            <div className=\"printerTable\">\n            <h1>My printers</h1>\n            \n            \n            <table className=\"myPrinters\">\n                <tbody>\n                    <tr>\n                        <th>Name</th>\n                        <th>Volume</th>\n                        <th>Max printer temperature</th>\n                    </tr>\n                    {printerList} \n                </tbody> \n            </table>\n\n\n            </div>\n            \n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n/*\n\n                <table className=\"myPrinters\">\n                    <tbody>\n                    <tr>\n                        <th>Address</th>\n                        <th>Name</th>\n                        <th>Seleziona</th>\n                    </tr> \n                    {printers.printers.map((val,key)=>\n                    <tr key={key}>\n                        <td key={val.address}>{val.address}</td>\n                        <td key={val.name}>{val.name}</td>\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} onClick={async ()=>navigate('/myprinters/'+val.address)}className=\"printerButton\">Seleziona</button></td>\n                    </tr>)}\n                   </tbody> \n                </table>\n\n\n\n\n*/"]},"metadata":{},"sourceType":"module"}