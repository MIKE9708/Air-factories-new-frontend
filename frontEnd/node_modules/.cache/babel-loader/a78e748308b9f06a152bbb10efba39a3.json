{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Tables/Tables.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tables(props) {\n  _s();\n\n  const [printerList, setPr] = useState('');\n  const [materialsList, setMaterialsList] = useState('');\n  const navigate = useNavigate();\n  let result = '';\n\n  const removePrinter = async index => {\n    const onboard = new OnBoarding();\n    let res = await onboard.removePrinter(index);\n    if (res !== 'Error') window.location.reload();\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const boarding = new OnBoarding();\n\n      if (props.table === 'printer') {\n        const web3 = new Web3();\n        let res = await boarding.getPrinters();\n        console.log(res);\n        console.log(\"qui\");\n        result = res.map((value, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"printers\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"color\",\n              onClick: () => navigate('/myprinters/' + web3.utils.toUtf8(value.name) + '&&' + key),\n              children: [\" \", web3.utils.toUtf8(value.name), \" \"]\n            }, value.name + \"name\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: [value.volume, \"m\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 101\n              }, this)]\n            }, value.volume + \"volume\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: [\"  \", value.maxPrintTemperature, \"\\u2103 \"]\n            }, value.maxPrintTemperature, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove\",\n                onClick: () => removePrinter(key),\n                children: \"Rimuovi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 75\n              }, this)\n            }, key + \"button\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 32\n          }, this);\n        });\n        setPr(result);\n      } else if (props.table === 'material') {\n        let res = await boarding.getMaterials();\n        console.log(res);\n      }\n    }\n\n    ;\n    getData();\n  }, [result]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printerTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My printers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"myPrinters\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [props.name === 'printer' ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Max printer temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 28\n          }, this), props.name === 'printer' ? printerList : materialsList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonArea\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"AddprinterButton\",\n          onClick: () => navigate('/add' + props.name),\n          children: \"Aggiungi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Tables, \"6ydZI/Avso+Z8PmVRu3sFL+A6cU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tables;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Tables/Tables.js"],"names":["useEffect","useState","Web3","OnBoarding","useNavigate","Tables","props","printerList","setPr","materialsList","setMaterialsList","navigate","result","removePrinter","index","onboard","res","window","location","reload","getData","boarding","table","web3","getPrinters","console","log","map","value","key","utils","toUtf8","name","width","volume","maxPrintTemperature","getMaterials"],"mappings":"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","sourcesContent":["import { useEffect,useState } from \"react\";\nimport Web3 from \"web3\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Tables(props){\n\n    const [printerList,setPr]=useState('');\n    const [materialsList,setMaterialsList]=useState('');\n    const navigate=useNavigate();\n    let result='';\n\n    const removePrinter=(async(index)=>{\n        const onboard=new OnBoarding();\n        let res=await onboard.removePrinter(index);\n        if(res!=='Error')\n            window.location.reload();\n    })\n\n    useEffect(()=>{\n        \n        async function getData(){\n            const boarding=new OnBoarding();\n            if(props.table==='printer'){\n\n                const web3=new Web3();\n                let res =await boarding.getPrinters();\n                console.log(res)\n                console.log(\"qui\")\n                result=res.map((value,key)=>{\n                        return <tr key={key} className=\"printers\" >\n                            <td key={value.name+\"name\"} className=\"color\" onClick={()=>navigate('/myprinters/'+web3.utils.toUtf8(value.name)+'&&'+key)}> {web3.utils.toUtf8(value.name)} </td>\n                            <td key={value.volume+\"volume\"}  style={{width:\"10px\"}} >{value.volume}m<sup>3</sup></td>\n                            <td key={value.maxPrintTemperature}  style={{width:\"10px\"}} >  {value.maxPrintTemperature}&#8451; </td>\n                            <td key={key+\"button\"} style={{width:\"10px\"}}><button className=\"remove\" onClick={()=>removePrinter(key)}>Rimuovi</button></td>\n                        </tr>  \n                })\n                setPr(result);\n        }\n        else if(props.table==='material'){\n            let res=await boarding.getMaterials();\n            console.log(res);\n        }};\n        getData();},[result])\n\n        return(\n            <div>\n           <div className=\"printerTable\">\n           <h1>My printers</h1>\n           \n           \n           <table className=\"myPrinters\">\n               <tbody>\n                   {props.name==='printer'?(<tr>\n                       <th>Name</th>\n                       <th>Volume</th>\n                       <th>Max printer temperature</th>\n                       <th>Remove</th>\n                   </tr>):(<tr>\n                            <th>Name</th>\n                            <th>Color</th>\n                            <th>Quantity</th>\n                        </tr>)}\n\n                   {props.name==='printer'?(printerList):(materialsList)} \n               </tbody>\n\n           </table>\n           <div className=\"buttonArea\">\n                   <button className=\"AddprinterButton\" onClick={()=>navigate('/add'+props.name)}>Aggiungi</button>\n               </div>\n\n           </div>\n           \n       </div>\n        )\n}"]},"metadata":{},"sourceType":"module"}