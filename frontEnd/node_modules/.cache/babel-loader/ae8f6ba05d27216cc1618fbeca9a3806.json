{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js\",\n    _s = $RefreshSig$();\n\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport './Myprinters.css'; //import { useNavigate } from \"react-router-dom\";\n\nimport { useEffect, useState } from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPrinters() {\n  _s();\n\n  //const navigate=useNavigate();\n  const [printerList, setPr] = useState([]);\n  let result = '';\n  useEffect(() => {\n    async function getPrintersData() {\n      const boarding = new OnBoarding();\n      let res = await boarding.getPrinters();\n      console.log(\"qua\");\n      let valu = res.map((value, key) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.name\n          }, value.name + \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.volume\n          }, value.volume + \"volume\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.maxPrintTemperature\n          }, value.maxPrintTemperature, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 28\n        }, this);\n      });\n      console.log(valu);\n    }\n\n    ;\n    getPrintersData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printerTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My printers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"myPrinters\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Max printer temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), printerList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n/*\n\n                <table className=\"myPrinters\">\n                    <tbody>\n                    <tr>\n                        <th>Address</th>\n                        <th>Name</th>\n                        <th>Seleziona</th>\n                    </tr> \n                    {printers.printers.map((val,key)=>\n                    <tr key={key}>\n                        <td key={val.address}>{val.address}</td>\n                        <td key={val.name}>{val.name}</td>\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} onClick={async ()=>navigate('/myprinters/'+val.address)}className=\"printerButton\">Seleziona</button></td>\n                    </tr>)}\n                   </tbody> \n                </table>\n\n\n\n\n*/\n\n_s(MyPrinters, \"68y4lQllRu72DWzuH7FeQS5cjkE=\");\n\n_c = MyPrinters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPrinters\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js"],"names":["UserNav","useEffect","useState","OnBoarding","MyPrinters","printerList","setPr","result","getPrintersData","boarding","res","getPrinters","console","log","valu","map","value","key","name","volume","maxPrintTemperature"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,gCAAxB;AACA,OAAO,kBAAP,C,CACA;;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,4CAAvB;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC;AACA,QAAM,CAACC,WAAD,EAAaC,KAAb,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIK,MAAM,GAAC,EAAX;AAKAN,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeO,eAAf,GAAgC;AAC5B,YAAMC,QAAQ,GAAC,IAAIN,UAAJ,EAAf;AACA,UAAIO,GAAG,GAAE,MAAMD,QAAQ,CAACE,WAAT,EAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAIC,IAAI,GAACJ,GAAG,CAACK,GAAJ,CAAQ,CAACC,KAAD,EAAOC,GAAP,KAAa;AAE1B,4BAAW;AAAA,kCACH;AAAA,sBAA6BD,KAAK,CAACE;AAAnC,aAASF,KAAK,CAACE,IAAN,GAAW,MAApB;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAA,sBAAiCF,KAAK,CAACG;AAAvC,aAASH,KAAK,CAACG,MAAN,GAAa,QAAtB;AAAA;AAAA;AAAA;AAAA,kBAFG,eAGH;AAAA,sBAAqCH,KAAK,CAACI;AAA3C,aAASJ,KAAK,CAACI,mBAAf;AAAA;AAAA;AAAA;AAAA,kBAHG;AAAA,WAASH,GAAT;AAAA;AAAA;AAAA;AAAA,gBAAX;AAKH,OAPQ,CAAT;AAQAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEH;;AAAA;AACDN,IAAAA,eAAe;AACd,GAjBI,CAAT;AAmBA,sBACI;AAAA,4BACK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADL,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,+BACI;AAAA,kCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMKH,WANL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;AASD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAjFwBD,U;;KAAAA,U","sourcesContent":["import { UserNav } from \"../../component/Navbar/homeNav\"\nimport './Myprinters.css'\n//import { useNavigate } from \"react-router-dom\";\nimport { useEffect,useState} from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\n\nexport default function MyPrinters(){\n\n    //const navigate=useNavigate();\n    const [printerList,setPr]=useState([]);\n    let result='';\n\n\n\n\n    useEffect(()=>{\n        async function getPrintersData(){\n            const boarding=new OnBoarding();\n            let res =await boarding.getPrinters()\n            console.log(\"qua\")\n            let valu=res.map((value,key)=>{\n                 \n                return     <tr key={key}>\n                        <td key={value.name+\"name\"}>{value.name}</td>\n                        <td key={value.volume+\"volume\"}>{value.volume}</td>\n                        <td key={value.maxPrintTemperature}>{value.maxPrintTemperature}</td>\n                    </tr>  \n            })\n            console.log(valu);\n    \n        };\n        getPrintersData();\n        })\n       \n    return(\n        <div>\n             <UserNav/>\n            <div className=\"printerTable\">\n            <h1>My printers</h1>\n            \n            \n            <table className=\"myPrinters\">\n                <tbody>\n                    <tr>\n                        <th>Name</th>\n                        <th>Volume</th>\n                        <th>Max printer temperature</th>\n                    </tr>\n                    {printerList} \n                </tbody> \n            </table>\n\n\n            </div>\n            \n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n/*\n\n                <table className=\"myPrinters\">\n                    <tbody>\n                    <tr>\n                        <th>Address</th>\n                        <th>Name</th>\n                        <th>Seleziona</th>\n                    </tr> \n                    {printers.printers.map((val,key)=>\n                    <tr key={key}>\n                        <td key={val.address}>{val.address}</td>\n                        <td key={val.name}>{val.name}</td>\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} onClick={async ()=>navigate('/myprinters/'+val.address)}className=\"printerButton\">Seleziona</button></td>\n                    </tr>)}\n                   </tbody> \n                </table>\n\n\n\n\n*/"]},"metadata":{},"sourceType":"module"}