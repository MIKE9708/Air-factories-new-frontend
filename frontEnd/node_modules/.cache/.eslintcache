[{"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/index.js":"1","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/App.js":"2","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/reportWebVitals.js":"3","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Navbar/homeNav.js":"4","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/data/data.js":"5","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/Users/Users.js":"6","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/Web3.js":"7","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js":"8","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/signin/SignIn.js":"9","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/PrinterDetails/PrinterDetails.js":"10","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/myDesigneInfo/DesignInfo.js":"11","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Mydesignes/mydesignes.js":"12","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js":"13","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/metamaskLogin/metamaskLogin.js":"14","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/WalletCheck/WalletConnected.js":"15","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Homepage/Homepage.js":"16","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/design/design.js":"17","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Test.js":"18","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/STLviewer/Stl.js":"19","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/StlLoad/StlLoad.js":"20","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/LoadPrinter/LoadPrinter.js":"21","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/OnBoarding/OnBoarding.js":"22","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/dropdown/dropdown.js":"23","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/PrinterInfoComponent/InfoComponent.js":"24","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Mymaterials/MyMaterials.js":"25","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/AddMaterial/AddMaterial.js":"26","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Tables/Tables.js":"27","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Functions/handleChange.js":"28"},{"size":1562,"mtime":1653140195369,"results":"29","hashOfConfig":"30"},{"size":1919,"mtime":1654108213816,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1650566283849,"results":"32","hashOfConfig":"30"},{"size":1756,"mtime":1653423698450,"results":"33","hashOfConfig":"30"},{"size":2557,"mtime":1654674311412,"results":"34","hashOfConfig":"30"},{"size":3124,"mtime":1654037601384,"results":"35","hashOfConfig":"30"},{"size":662,"mtime":1651502994701,"results":"36","hashOfConfig":"30"},{"size":741,"mtime":1652170059661,"results":"37","hashOfConfig":"30"},{"size":4841,"mtime":1654037349209,"results":"38","hashOfConfig":"30"},{"size":4134,"mtime":1653991420035,"results":"39","hashOfConfig":"30"},{"size":1837,"mtime":1653139701259,"results":"40","hashOfConfig":"30"},{"size":2464,"mtime":1652169677705,"results":"41","hashOfConfig":"30"},{"size":1154,"mtime":1653435334960,"results":"42","hashOfConfig":"30"},{"size":2425,"mtime":1652914809623,"results":"43","hashOfConfig":"30"},{"size":2311,"mtime":1653209790196,"results":"44","hashOfConfig":"30"},{"size":2166,"mtime":1653140240892,"results":"45","hashOfConfig":"30"},{"size":1822,"mtime":1653140545166,"results":"46","hashOfConfig":"30"},{"size":741,"mtime":1652643312482,"results":"47","hashOfConfig":"30"},{"size":317,"mtime":1652433201292,"results":"48","hashOfConfig":"30"},{"size":1424,"mtime":1652642994060,"results":"49","hashOfConfig":"30"},{"size":7261,"mtime":1654107706066,"results":"50","hashOfConfig":"30"},{"size":3702,"mtime":1654037744558,"results":"51","hashOfConfig":"30"},{"size":0,"mtime":1652818687069,"results":"52","hashOfConfig":"30"},{"size":4979,"mtime":1653377415343,"results":"53","hashOfConfig":"30"},{"size":3413,"mtime":1654037875644,"results":"54","hashOfConfig":"30"},{"size":5115,"mtime":1654674340861,"results":"55","hashOfConfig":"30"},{"size":4124,"mtime":1654037968892,"results":"56","hashOfConfig":"30"},{"size":338,"mtime":1653487019495,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"19nnbe6",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/index.js",[],["123","124"],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/App.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/reportWebVitals.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Navbar/homeNav.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/data/data.js",["125"],"let designes=[{\n    name:\"cubo\",\n    path:\"images/cube.png\",\n    fileName:'Cube_3d.stl',\n    info:\"Questo è un design di test per la stampa 3D di un cubo\"\n},\n{name:\"cilindro\",\npath:\"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/cilindro\",\nfileName:\"Cilindro.stl\",\ninfo:\"Questo è un design di test per la stampa 3D di un cilindro\"\n},\n{name:\"Bunny\",\npath:\"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/Bunny.png\",\nfileName:\"Bunny.stl\",\ninfo:\"Questo è un design di test per la stampa 3D di un coniglio\"},\n{name:\"Portachiavi\",\npath:\"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/portachiavi_unime.stl\",\nfileName:\"portachiavi_unime.stl\",\ninfo:\"Questo è un design di test per la stampa 3D di un portachiavi unime\"\n}\n]\n\nlet myPrinters={printers:[\n    {\n    address:\"0x9b8bb1E03e2d5D0dD7cE536A975730903177B37f\",\n    name:\"testPrinter-1\",\n    nozzlesMounted:'Brass',\n    soluble:'yes',\n    foodSafety:'no'\n\n},\n{\n    address:\"0x1a22BCB21fde9924EbfD414D2099c6Fe5C13FDb8\",\n    name:\"testPrinter-2\",\n    nozzlesMounted:'Brass',\n    soluble:'yes',\n    foodSafety:'no'\n},\n\n{\n    address:\"0xa5ffbB8932d3E7ECe2fC6142951CB58168114b28\",\n    name:\"testPrinter-3\",\n    nozzlesMounted:'Brass',\n    soluble:'yes',\n    foodSafety:'no'\n}]}\n\n\n\nconst material=[\n    {value:0 , label:\"ABS\"},\n    {value:1,label:\"PLA\"},\n    {value:2,label:\"PETG\"}];\n    \nconst color=[0,\"BLACK\",\"WHITE\",\"BROWN\",\"GRAY\",\"YELLOW\",\n    \"ORANGE\",\"RED\",\"PINK\",\"PURPLE\",\"BLUE\",\"GREEN\"];\n\nconst selectColors=[\n    {value:1,label:\"BLACK\"},\n    {value:2,label:\"WHITE\"},\n    {value:3,label:\"BROWN\"},\n    {value:4,label:\"GRAY\"},\n    {value:5,label:\"YELLOW\"},\n    {value:6,label:\"ORANGE\"},\n    {value:7,label:\"RED\"},\n    {value:8,label:\"PINK\"},\n    {value:9,label:\"PURPLE\"},\n    {value:10,label:\"BLUE\"},\n    {value:11,label:\"GREEN\"}\n];\nconst nozzles=[\n        {value:\"1\" , label:\"1mm\"},\n        {value:\"2\",label:\"2mm\"},\n        {value:\"3\",label:\"3mm\"},\n        {value:\"4\",label:\"4mm\"},\n        {value:\"5\",label:\"5mm\"},\n        {value:\"6\",label:\"6mm\"}]\n\nexport function getNozzles(){\n            return nozzles;\n        }\n        \n\nexport function getPrinters(){\n    return myPrinters;\n}\n\nexport function getPrinter(val){\n    return myPrinters.printers.find((elem)=>elem.address===val);\n}\n\n\n\nexport function getDesignes(){\n    return designes;\n}\n\nexport function getDesigne(designe){\n    return designes.find((val)=>val.name===designe);\n}\n\n\nexport function getColor(){\n    return selectColors;\n\n}\n\nexport function getConstMaterials(){\n    return material;\n}","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/Users/Users.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/Web3.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/signin/SignIn.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/PrinterDetails/PrinterDetails.js",["126"],"import { useParams } from \"react-router-dom\";\nimport { MakerNav } from \"../../../component/Navbar/homeNav\";\nimport {useEffect,useState} from 'react';\nimport './PrinterDetails.css';\nimport OnBoarding from \"../../../SmartContracts/OnBoarding/OnBoarding\";\nimport {InfoComponent,AddComponent} from \"../../../component/PrinterInfoComponent/InfoComponent\";\n\nexport default function PrinterDetails(){\n\n    let param = useParams();\n    console.log(param);\n    let reg=/&&([0-9])/g;\n    const [loaded,setLoaded]=useState(false);\n    const index=reg.exec(param.printerDetails);\n    console.log(index);\n    const [myPrinter,setMyPrinter]=useState();\n    const title=['Printer Info','Modify Printer'];\n    const [currentTitle,setCurrentTitle]=useState(title[0]);\n    const target={        \n        info:false,\n        modify:false,\n    }\n    const [section,setSection]=useState({        \n        info:true,\n        modify:false,\n    });\n    \n    //let printer=getPrinter(param.printerDetails);\n\n    function setNewSection(currentSection){\n        let result='';\n        switch(currentSection){\n            case 'info': result=Object.assign(target,{info:true});\n                setSection(result);\n                setCurrentTitle(title[0]); \n                break;\n            case 'Modify': result=Object.assign(target,{modify:true});\n                setSection(result);\n                setCurrentTitle(title[1]);\n                break;\n            default: break;\n        }\n\n\n    }\n\n\n    useEffect(()=>{\n\n        const  getPrinterInfo=async()=>{\n            const onboard=new OnBoarding();\n            const result=await onboard.getPrinter(index[1]);\n            setMyPrinter(result);\n            setLoaded(true);\n            \n            \n\n        };\n        getPrinterInfo();\n    },[])\n    return (\n        <div>\n        <MakerNav/>\n        <div className=\"title\">\n            <h2>{currentTitle}</h2>\n        </div>\n        \n            <div className=\"navBarPrinter\">\n                    <p className=\"sectionStyle\" style={{textDecoration:section.info? 'underline': '',\n                        color: section.info? 'rgb(130, 195, 255)': ''}} onClick={()=>{\n                        if(section.info!==true)\n                            setNewSection('info');\n                    }}>Info</p>\n                    <p className=\"sectionStyle\" style={{textDecoration:section.modify? 'underline': '',\n                        color: section.modify? 'rgb(130, 195, 255)': ''}} onClick={()=>{\n                        if(section.modify!==true)\n                            setNewSection('Modify');\n                    }}>Modify</p>\n            </div>\n            <div className =\"container\">\n                <div className=\"video\">\n                    <iframe className=\"video\"src={\"http://192.168.1.172/webcam/?action=stream\"}\n                        width=\"450px\"\n                        height=\"400px\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        title=\"Printer stream\">\n                    </iframe>\n                </div>\n                {section.info && loaded===true && <InfoComponent printer={myPrinter}/>}\n                {section.modify && <AddComponent/>}\n\n        </div>\n          \n        </div>\n    )   \n}\n\n\n/*\n <h1 className=\"printerName\">{printer.name}</h1>\n        <div className=\"myPrinter\">\n        <div className=\"printerVideo\">\n        </div>\n\n\n\n\n\n            <div className=\"info\">\n            <iframe className=\"video\"src={\"http://\"+address+\"/webcam/?action=stream\"}\n            width=\"450px\"\n            height=\"450px\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            title=\"Printer stream\"></iframe>\n            <div class=\"dataInfo\">\n                <h3>Address:</h3><p>{printer.address}</p>\n                <h3>Nozzles mounted:</h3><p>{printer.nozzlesMounted}</p>\n                <h3>Soluble:</h3><p>{printer.soluble}</p>\n                <h3>Food safety:</h3><p>{printer.foodSafety}</p>\n*/","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/myDesigneInfo/DesignInfo.js",["127"],"import { getDesigne } from \"../../data/data\";\nimport { useParams } from \"react-router-dom\";\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport './DesignInfo.css'\nimport { Stl } from \"../../component/STLviewer/Stl\";\nexport default function DesignInfo(){\n    let param = useParams();\n    \n    let design=getDesigne(param.designInfo)\n    console.log(design.fileNamename)\n\n    const startPrint=async()=>{\n    let address=\"\";\n    if (design.fileName===\"Cube_3d.stl\")\n        address=\"http://192.168.8.230\";\n    else address=\"http://192.168.8.240\";\n        window.location = address;\n        \n\n        /*await fetch('IP_ADDRESS/printer/start',{\n            method:'POST',\n            body:{\n                'design':''\n            },\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        });\n        const result=await startPrint.json();\n        return result;*/\n    }\n\n\n\n    function importAll(r,stlFileName) {\n        let designes = {};\n        r.keys().map((item, index) => { designes[item.replace('./', '')] = r(item);\n        return 1; });       \n        for(const [key,value] of Object.entries(designes)){\n            console.log(key)\n            if(key===stlFileName)\n                return designes[key].default;\n        }\n    }\n    const design_path=importAll(require.context('../../images/stlFiles/',false,/\\.stl$/),design.fileName);\n    \n    return(\n        <div>\n            <UserNav/>\n            <div className=\"stl_render\">\n                <h1>{design.name}</h1>\n                <Stl design_path={design_path}/>\n                <div className=\"designInfo\">                    \n                    <p>{design.info}</p>\n                    <button className=\"printButton\" onClick={startPrint}>Stampa</button>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Mydesignes/mydesignes.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Myprinters/MyPrinters.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/metamaskLogin/metamaskLogin.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/WalletCheck/WalletConnected.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Homepage/Homepage.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/design/design.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Test.js",["128"],"import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect } from \"react\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport default function Test(){\n    const { chainId, account, activate, active,library } = useWeb3React()\n\n    const onClick=(()=>{\n     activate(new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42, 56, 97,1337] }))\n    })\n    useEffect(() => {\n  \n      },[account,active]);\n  \n    return (\n        <div>\n          <div>ChainId: {chainId}</div>\n          <div>Account: {account}</div>\n          {active ? (\n            <div> </div>\n          ) : (\n            <button type=\"button\" onClick={onClick}>\n              Connect \n            </button>)}\n            \n          </div>\n    );\n  }\n",["129","130"],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/STLviewer/Stl.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/StlLoad/StlLoad.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/LoadPrinter/LoadPrinter.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/OnBoarding/OnBoarding.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/dropdown/dropdown.js",[],["131","132"],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/PrinterInfoComponent/InfoComponent.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/Mymaterials/MyMaterials.js",[],"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/AddMaterial/AddMaterial.js",["133","134","135","136"],"import Select from 'react-select';\nimport { MakerNav } from '../../component/Navbar/homeNav'; \nimport { useState } from 'react';\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding';\nimport { useNavigate,useParams } from 'react-router-dom';\nimport { getColor,getConstMaterials } from '../../data/data';\nimport { useEffect } from 'react';\n\n\nexport default function AddMaterial(props){\n    const navigate=useNavigate();\n    const [val,setVal]=useState({});\n    const material=getConstMaterials();\n    const color=getColor();\n    const [section,setSection]=useState(1);\n    //const params=useParams();\n    const [materialUpdate,setMaterialUpdate]=useState();\n    const onboard=new OnBoarding();\n\n\n    const handleSubmit=async(event)=>{\n        event.preventDefault();\n        let result=false;\n        let op=await onboard.addMaterials(val);\n        if(op===\"Error\"){\n            alert(\"Errore\");\n            window.location.reload();\n            }\n            else navigate('/');\n    }\n\n    useEffect(()=>{\n\n        /*const getMaterial=(async()=>{\n            if(props.type===\"update\"){\n                let res=await onboard.getMaterials();\n                setMaterialUpdate(res);\n            }\n        });*/\n        //getMaterial();\n    })\n\n\n\n    \n    return(\n        <div className='sign'>\n            <MakerNav/>\n            <h1>Add Material</h1>\n            <div className='SignIn'>\n            <form  onSubmit={handleSubmit}>\n            <div className=\"sectionPage\" style={{display:section===1?('block'):('none')}}>\n\n                   <label>\n                            <p>Material Name</p>\n                            <input type=\"text\" style={{display:'inline'}} name=\"address\" onChange={(event) =>{ setVal((val)=>({...val,'materialName':event.target.value}))}} autoComplete=\"off\" required minLength=\"4\" maxLength=\"6\"></input>\n                    </label>\n                    <label>\n                        <p>Material Print Temperature</p>\n                        <input type=\"number\" id=\"tentacles\" name=\"tentacles\" \n                            min=\"1\" max=\"90\" onChange={event => {setVal((val)=>({...val,'materialTemp':event.target.value}))}}/>\n                    </label>\n            \n\n                <label>\n                    <p>Material Bed Temperature</p>\n                    <input type=\"number\" id=\"tentacles\" name=\"tentacles\" \n                        min=\"1\" max=\"90\" onChange={event => {setVal((val)=>({...val,'materialBedTemp':event.target.value}))}}/>\n                </label>\n            </div>\n            <div className=\"sectionPage\" style={{display:section===2?('block'):('none')}}>\n\n                <label>\n                    <p>Quantity (Kg)</p>\n                    <input type=\"number\" id=\"tentacles\" name=\"tentacles\" \n                        min=\"1\" max=\"10\" onChange={event => {setVal((val)=>({...val,'materialQuantity':event.target.value}))}}/>\n                </label>\n\n                <label>\n                    <p>Material Color</p>\n                        <div style={{\n                            width:\"200px\",\n                            margin:\"auto\"\n                            }}>\n                    <Select  \n                        options={color}\n                        getOptionValue={(option)=>option.value}\n                        onChange={(option)=>{\n                            console.log(option.value);\n                            setVal((val)=>({...val,'color':[option.value]}))\n                            }}/>\n                        </div>\n                    </label>\n\n                <label>\n                    <p>Material</p>\n                        <div style={{\n                            width:\"200px\",\n                            margin:\"auto\"\n                            }}>\n                    <Select   \n                        options={material}\n                        getOptionValue={(option)=>option.value}\n                        onChange={(option)=>{\n                            console.log(option.value);\n                            setVal((val)=>({...val,'material':[option.value]}))\n                            }}/>\n                        </div>\n                    </label>\n   \n\n                </div>\n                <div className='elementInsertion'>\n                {                   \n                                    \n                                    section>1\n                                        &&\n                                    \n                <button className=\"next1\" type='button' onClick={()=>setSection((prev)=>prev-1)}><p>&#60;</p></button>\n                                       \n                }\n                {                       section!==2\n                                            &&\n                     <button className=\"next1\" type='button' \n                        onClick={()=>setSection((prev)=>prev+1)}><p>&#62;</p></button>\n                }\n\n                {section===2 && <button className=\"next2\" style={{padding:\"10px\"}}type='submit' onClick={handleSubmit}>Aggiungi</button>}\n                </div>\n            </form>\n        </div>\n    </div>\n    )\n\n}","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Tables/Tables.js",["137"],"import { useEffect,useState } from \"react\";\nimport Web3 from \"web3\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getConstMaterials,getColor } from \"../../data/data\";\nexport default function Tables(props){\n\n    const [printerList,setPr]=useState('');\n    const [materialsList,setMaterialsList]=useState('');\n    const navigate=useNavigate();\n    let result='';\n\n    const removePrinter=(async(index)=>{\n        const onboard=new OnBoarding();\n        let res=await onboard.removePrinter(index);\n        if(res!=='Error')\n            window.location.reload();\n    })\n\n    const removeMaterial=(async(name,type,index)=>{\n        console.log(name,type,index)\n        const onboard=new OnBoarding();\n        let res=await onboard.removeMaterial(name,type,index);\n        if(res!=='Error')\n            window.location.reload();\n    })\n\n\n    useEffect(()=>{\n        \n        async function getData(){\n            const web3=new Web3();\n            if(props.table==='printer'){\n                let boarding=new OnBoarding();\n                let res =await boarding.getPrinters();\n                console.log(res)\n                console.log(\"qui\")\n                result=res.map((value,key)=>{\n                        return <tr key={key} className=\"printers\" >\n                            <td key={value.name+\"name\"} className=\"color\" onClick={()=>navigate('/myprinters/'+web3.utils.toUtf8(value.name)+'&&'+key)}> {web3.utils.toUtf8(value.name)} </td>\n                            <td key={value.volume+\"volume\"}  style={{width:\"10px\"}} >{value.volume}m<sup>3</sup></td>\n                            <td key={value.maxPrintTemperature}  style={{width:\"10px\"}} >  {value.maxPrintTemperature}&#8451; </td>\n                            <td key={key+\"button\"} style={{width:\"10px\"}}><button className=\"remove\" onClick={()=>removePrinter(key)}>Rimuovi</button></td>\n                        </tr>  \n                })\n                setPr(result);\n        }\n        else if(props.table==='material'){\n            const boarding=new OnBoarding();\n            await boarding.getMaterialsName();\n            let res=await boarding.getMaterials();\n            console.log(res);\n            if(res==='Error')\n                return\n            const material=getConstMaterials();\n            const color=getColor()\n            result=res.map((value,key)=>{\n                return <tr key={key} className=\"printers\" >\n                    <td key={value.name+\"name\"} className=\"color\" onClick={()=>navigate('/')}> {web3.utils.toUtf8(value.name)} </td>\n                    <td key={value.color+\"color\"}  style={{width:\"10px\"}} >{color[value.color]}</td>\n                    <td key={value.mType}  style={{width:\"10px\"}} >  {material[value.mType]} </td>\n                    <td key={key+\"button\"} style={{width:\"10px\"}}><button className=\"remove\" onClick={()=>removeMaterial(value.name,value.mType,key)}>Rimuovi</button></td>\n                </tr>  \n        })\n            setMaterialsList(result);\n        }};\n        getData();},[])\n\n        return(\n           <div className=\"printerTable\">\n           {props.table==='printer'?(<h1>My printers</h1>):(<h1>My materials</h1>)}\n           \n           <table className=\"myPrinters\">\n               <tbody>\n                   {props.table==='printer'?(<tr>\n                       <th>Name</th>\n                       <th>Volume</th>\n                       <th>Max printer temperature</th>\n                       <th>Remove</th>\n                   </tr>):(<tr>\n                            <th>Name</th>\n                            <th>Color</th>\n                            <th>Quantity</th>\n                            <th>Remove</th>\n                        </tr>)}\n\n                   {props.table==='printer'?(printerList):(materialsList)} \n               </tbody>\n\n           </table>\n           <div className=\"buttonArea\">\n                   <button className=\"AddprinterButton\" onClick={()=>navigate('/add'+props.table)}>Aggiungi</button>\n               </div>\n\n           </div>\n           \n       \n        )\n}","/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Functions/handleChange.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":55,"column":7,"nodeType":"144","messageId":"145","endLine":55,"endColumn":12},{"ruleId":"146","severity":1,"message":"147","line":60,"column":7,"nodeType":"148","endLine":60,"endColumn":9,"suggestions":"149"},{"ruleId":"142","severity":1,"message":"150","line":39,"column":24,"nodeType":"144","messageId":"145","endLine":39,"endColumn":29},{"ruleId":"142","severity":1,"message":"151","line":6,"column":48,"nodeType":"144","messageId":"145","endLine":6,"endColumn":55},{"ruleId":"138","replacedBy":"152"},{"ruleId":"140","replacedBy":"153"},{"ruleId":"138","replacedBy":"154"},{"ruleId":"140","replacedBy":"155"},{"ruleId":"142","severity":1,"message":"156","line":5,"column":22,"nodeType":"144","messageId":"145","endLine":5,"endColumn":31},{"ruleId":"142","severity":1,"message":"157","line":17,"column":12,"nodeType":"144","messageId":"145","endLine":17,"endColumn":26},{"ruleId":"142","severity":1,"message":"158","line":17,"column":27,"nodeType":"144","messageId":"145","endLine":17,"endColumn":44},{"ruleId":"142","severity":1,"message":"159","line":23,"column":13,"nodeType":"144","messageId":"145","endLine":23,"endColumn":19},{"ruleId":"146","severity":1,"message":"160","line":38,"column":24,"nodeType":"161","endLine":45,"endColumn":19},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'value' is assigned a value but never used.","'library' is assigned a value but never used.",["162"],["163"],["162"],["163"],"'useParams' is defined but never used.","'materialUpdate' is assigned a value but never used.","'setMaterialUpdate' is assigned a value but never used.","'result' is assigned a value but never used.","Assignments to the 'result' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [index]",{"range":"167","text":"168"},[1773,1775],"[index]"]